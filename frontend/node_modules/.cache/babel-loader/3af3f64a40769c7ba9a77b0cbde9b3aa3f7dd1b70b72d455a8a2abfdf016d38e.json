{"ast":null,"code":"var _jsxFileName = \"/Users/zhirong/Desktop/test4/frontend/src/Reports.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport AsyncSelect from 'react-select/async';\nimport UserContext from './UserContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Reports() {\n  _s();\n  const {\n    userEmail\n  } = useContext(UserContext);\n  const [values, setValues] = useState({\n    toiletName: '',\n    comments: ''\n  });\n  const [errors, setErrors] = useState({});\n  const navigate = useNavigate();\n  const [submitSuccess, setSubmitSuccess] = useState(false); // State variable to store success message\n\n  const [formKey, setFormKey] = useState(0);\n  const handleInput = event => {\n    setValues(prev => ({\n      ...prev,\n      [event.target.name]: event.target.value\n    }));\n  };\n  const loadOptions = (inputValue, callback) => {\n    axios.get(`http://localhost:8081/toiletdata`).then(res => {\n      const options = res.data.map(toilet => ({\n        value: toilet.toiletname,\n        label: toilet.toiletname\n      }));\n      callback(options);\n    });\n  };\n  const validate = () => {\n    let newErrors = {};\n\n    // Check if toiletName is not empty\n    if (!values.toiletName.trim()) {\n      newErrors.toiletName = \"Toilet name is required\";\n    }\n\n    // Check if comments is not empty\n    if (!values.comments.trim()) {\n      newErrors.comments = \"Comments are required\";\n    }\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0; // Returns true if no errors\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (validate()) {\n      axios.post('http://localhost:8081/reports', {\n        ...values,\n        email: userEmail\n      }).then(res => {\n        navigate('/reports');\n        // Clear the form\n        setValues({\n          toiletName: '',\n          comments: ''\n        });\n        // Set submitSuccess to true\n        setSubmitSuccess(true);\n        // Change the form key to force a re-render\n        setFormKey(prevKey => prevKey + 1);\n      }).catch(err => {\n        console.log(err);\n        // Set submitSuccess to false\n        setSubmitSuccess(false);\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      backgroundColor: 'white'\n    },\n    className: \"d-flex justify-content-center align-items-center vh-100\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white p-3 rounded\",\n      style: {\n        width: '500px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          fontFamily: 'Roboto, sans-serif'\n        },\n        children: \"Submit a Report\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }, this), submitSuccess && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-success\",\n        children: [\"Report submitted successfully!\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 89\n        }, this), \"We will email you when your report has been attended to.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 31\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        action: \"\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Toilet Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 28\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(AsyncSelect, {\n            cacheOptions: true,\n            defaultOptions: true,\n            loadOptions: loadOptions,\n            onChange: option => setValues({\n              ...values,\n              toiletName: option.label\n            }),\n            className: \"form-control rounded-0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 21\n          }, this), errors.toiletName && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-danger\",\n            children: errors.toiletName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 43\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Report Details (500 Character Limit) \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 28\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            placeholder: \"Enter Comments\",\n            name: \"comments\",\n            onChange: handleInput,\n            className: \"form-control rounded-0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 21\n          }, this), errors.comments && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-danger\",\n            children: errors.comments\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 41\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary w-100 rounded-0\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 17\n        }, this)]\n      }, formKey, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n_s(Reports, \"/+Hd1p/KxGgWY1R2XJbLMQdFbBA=\", false, function () {\n  return [useNavigate];\n});\n_c = Reports;\nexport default Reports;\nvar _c;\n$RefreshReg$(_c, \"Reports\");","map":{"version":3,"names":["React","useState","useContext","useNavigate","axios","AsyncSelect","UserContext","jsxDEV","_jsxDEV","Reports","_s","userEmail","values","setValues","toiletName","comments","errors","setErrors","navigate","submitSuccess","setSubmitSuccess","formKey","setFormKey","handleInput","event","prev","target","name","value","loadOptions","inputValue","callback","get","then","res","options","data","map","toilet","toiletname","label","validate","newErrors","trim","Object","keys","length","handleSubmit","preventDefault","post","email","prevKey","catch","err","console","log","style","backgroundColor","className","children","width","fontFamily","fileName","_jsxFileName","lineNumber","columnNumber","action","onSubmit","cacheOptions","defaultOptions","onChange","option","placeholder","_c","$RefreshReg$"],"sources":["/Users/zhirong/Desktop/test4/frontend/src/Reports.js"],"sourcesContent":["import React, { useState, useContext } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport AsyncSelect from 'react-select/async';\nimport UserContext from './UserContext';\n\nfunction Reports() {\n  const { userEmail } = useContext(UserContext);\n\n  const [values, setValues] = useState({\n    toiletName: '',\n    comments: ''\n  })\n  const [errors, setErrors] = useState({})\n\n  const navigate = useNavigate();\n\n  const [submitSuccess, setSubmitSuccess] = useState(false); // State variable to store success message\n\n  const [formKey, setFormKey] = useState(0);\n\n  const handleInput=(event)=>{\n    setValues(prev=>({...prev, [event.target.name]: event.target.value}))\n  }\n\n  const loadOptions = (inputValue, callback) => {\n    axios.get(`http://localhost:8081/toiletdata`)\n      .then(res => {\n        const options = res.data.map(toilet => ({ value: toilet.toiletname, label: toilet.toiletname }));\n        callback(options);\n      });\n  };\n\n  const validate = () => {\n    let newErrors = {};\n  \n    // Check if toiletName is not empty\n    if (!values.toiletName.trim()) {\n      newErrors.toiletName = \"Toilet name is required\";\n    }\n  \n    // Check if comments is not empty\n    if (!values.comments.trim()) {\n      newErrors.comments = \"Comments are required\";\n    }\n  \n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0; // Returns true if no errors\n  };\n  \n  const handleSubmit = (event) => {\n    event.preventDefault();\n    if (validate()) {\n      axios.post('http://localhost:8081/reports', { ...values, email: userEmail })\n        .then(res => {\n          \n          navigate('/reports');\n          // Clear the form\n          setValues({\n            toiletName: '',\n            comments: ''\n          });\n          // Set submitSuccess to true\n          setSubmitSuccess(true);\n          // Change the form key to force a re-render\n          setFormKey(prevKey => prevKey + 1);\n        })\n        .catch(err => {\n          console.log(err);\n          // Set submitSuccess to false\n          setSubmitSuccess(false);\n        });\n    }\n  };\n\n  return (\n    <div style={{ backgroundColor: 'white' }} className='d-flex justify-content-center align-items-center vh-100'>\n        <div className='bg-white p-3 rounded' style={{ width: '500px' }}>\n            <h2 style={{ fontFamily: 'Roboto, sans-serif' }}>Submit a Report</h2>\n            {submitSuccess && <p className='text-success'>Report submitted successfully!<br />\n            We will email you when your report has been attended to.</p>}\n            <form action=\"\" onSubmit={handleSubmit} key={formKey}>\n                <div className='mb-3'>\n                    <label><strong>Toilet Name</strong></label>\n                    <AsyncSelect \n            cacheOptions \n            defaultOptions \n            loadOptions={loadOptions} \n            onChange={option => setValues({ ...values, toiletName: option.label })} \n            className='form-control rounded-0'\n          />\n                    {errors.toiletName && <span className='text-danger'>{errors.toiletName}</span>}\n                </div>\n                <div className='mb-3'>\n                    <label><strong>Report Details (500 Character Limit) </strong></label>\n                    <textarea placeholder='Enter Comments' name='comments'\n                    onChange={handleInput} className='form-control rounded-0'/>\n                    {errors.comments && <span className='text-danger'>{errors.comments}</span>}\n                </div>\n                <button className='btn btn-primary w-100 rounded-0'>Submit</button>                \n            </form>\n        </div>\n    </div>\n  );\n}\n\nexport default Reports;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}